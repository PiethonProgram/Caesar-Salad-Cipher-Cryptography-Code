# -*- coding: utf-8 -*-
"""a3_zhue2020.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fo_hTZ8vnwfg8bQvJR3S_jMhLTvK7H7D
"""

import os

def encrypt(phrase,key):
    cipherPhrase = ""
    for letter in phrase:
        if ord('a')<=ord(letter)<=ord('z'):  # if letter is between a-z lower case
            encryptedOrder= ord(letter) + key # encrypt the letter
            if encryptedOrder > ord('z'):     # check if the encrypted letter is still in the range   
                encryptedOrder=encryptedOrder- 26   # if outside the range, rotate back
            encryptedLetter = chr(encryptedOrder)   # convert encrypted letter from unicode to letter
            cipherPhrase=cipherPhrase+encryptedLetter # include the encrypted letter to output phrase
        elif ord('A')<=ord(letter)<=ord('Z'): # if letter is between A-Z upper case
            encryptedOrder= ord(letter) + key
            if encryptedOrder > ord('Z'):
                encryptedOrder=encryptedOrder- 26
            encryptedLetter = chr(encryptedOrder)
            cipherPhrase=cipherPhrase+encryptedLetter
        else:
            cipherPhrase=cipherPhrase+letter
    return(cipherPhrase)

def decrypt(phrase,key):
    deCipherPhrase = ""
    for letter in phrase:
        if ord('a')<=ord(letter)<=ord('z'):  # if letter is between a-z lower case
            deCryptedOrder= ord(letter) - key # decode the letter
            if deCryptedOrder < ord('a'): # check if the decoded letter is still in the range
                deCryptedOrder=deCryptedOrder+ 26 # if outside the range, rotate back
            deCryptedLetter = chr(deCryptedOrder) # convert decoded letter from unicode to letter
            deCipherPhrase=deCipherPhrase+deCryptedLetter # include the decoded letter to output phrase
        elif ord('A')<=ord(letter)<=ord('Z'): # if letter is between A-Z upper case
            deCryptedOrder= ord(letter) - key
            if deCryptedOrder < ord('A'):
                deCryptedOrder=deCryptedOrder+ 26
            deCryptedLetter = chr(deCryptedOrder)
            deCipherPhrase=deCipherPhrase+deCryptedLetter
        else:
            deCipherPhrase=deCipherPhrase+letter
    return(deCipherPhrase)

continueLoop='Y'      # check whether user wants to continue
key=3                 # key, fixed as 3
while continueLoop=='Y':    # loop untile user says 'N'
    fileName = input("Input File Name:\n")         # input file name
    operation = input("Please enter your operation (E or D):\n") # encoding or decoding
    outputFileName=""
    if operation=='E':
        outputFileName=os.path.splitext(fileName)[0]+'_enc'+'.txt'  # output encoding
        fOut = open(outputFileName, "w")
    elif operation=='D':                                     
        outputFileName=os.path.splitext(fileName)[0]+'_dec'+'.txt'  # output decoding
        fOut = open(outputFileName, "w")
    if os.path.isfile(fileName):                                    # check if file exist
        fIn = open(fileName, "r")
        for x in fIn:                                              # for each line 
            words=x.split()                                        # split string by space key -> word
            for word in words:                                     # for each word
                if operation=='E':
                    cheese=encrypt(word,key)                       # call encoding function
                    fOut.write(cheese+'\n')                             # write encoding to file
                    print("Encrpy: %s -> %s" % (word,cheese))
                elif operation=='D':                               
                    butter=decrypt(word,key)                      # call decoding function
                    fOut.write(butter+'\n')                            # write decoding to file
                    print("Decrpy: %s -> %s" % (word,butter))
        fIn.close()                                               # close input file
        fOut.close()                                              # close output file
    else:
        print("%s does not exist!" % fileName)
    continueLoop = input("Do you want to submit another file (Y or N):\n") # check whether use wans to repeat
print("Thank you. Good bye!")